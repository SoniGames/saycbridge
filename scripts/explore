#!/usr/bin/env python
# Copyright (c) 2013 The SAYCBridge Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from __future__ import print_function
import logging
import sys
import find_src

from core.callhistory import CallHistory
from core.callexplorer import CallExplorer
from z3b.bidder import Interpreter, InconsistentHistoryException
from core.suit import SUITS


_log = logging.getLogger(__name__)


def _print_usage_and_exit():
    print("USAGE: explore CALL_HISTORY")
    print(" CALL_HISTORY is space or comma separated.")
    print("Will list the rule used for the last call in each possible history.")
    sys.exit(1)


if __name__ == '__main__':
    args = sys.argv[1:]

    interpreter = Interpreter()
    history_string = " ".join(args)
    call_history = CallHistory.from_string(history_string)
    history = interpreter.create_history(call_history)
    for call in CallExplorer().possible_calls_over(call_history):
        try:
            new_history = interpreter.extend_history(history, call)
            print(call, new_history.rho.rule_for_last_call)
        except InconsistentHistoryException as e:
            print(call, None)
