#!/usr/bin/env python
# Copyright (c) 2013 The SAYCBridge Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from __future__ import print_function
import logging
import sys
import find_src

from core.callhistory import CallHistory
from z3b.bidder import Interpreter


_log = logging.getLogger(__name__)


def _print_usage_and_exit():
    print("USAGE: rules-for HISTORY")
    print(" HISTORY is space or comma separated.")
    print("Will list the rule used for each call.")
    sys.exit(1)


if __name__ == '__main__':
    args = sys.argv[1:]
    if not args:
        _print_usage_and_exit()

    interpreter = Interpreter()
    history_string = " ".join(args)
    call_history = CallHistory.from_string(history_string)

    history = interpreter.create_history(call_history)
    # FIXME: We need a non-private method for this!
    for history in history._walk_history():
        # Hack to ignore the empty history at the end.
        if history.rho.last_call:
            print("%s : %s" % (history.rho.last_call, history.rho.rule_for_last_call))
